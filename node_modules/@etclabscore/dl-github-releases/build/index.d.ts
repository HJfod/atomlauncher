declare function pass(): boolean;
/**
 * Gives a list of the releases made for a repository, optionally filtered by release
 * and/or based on inclusion of a particular asset.
 *
 * @param user the name of the user or organization that owns the repo
 * @param repo the name of the repository that you want to list releases of
 * @param filterRelease the release filter function
 * @param filterAsset the asset filter function
 */
export declare function listReleases(user: string, repo: string, filterRelease?: typeof pass, filterAsset?: typeof pass): Promise<string[]>;
/**
 * Downloads the releases for a particular repo,  optionally filtered by release
 * and/or based on inclusion of a particular asset.
 *
 * @param user the name of the user or organization that owns the repo
 * @param repo the name of the repository that you want to list releases of
 * @param outputDir the relative path to a directory to write the downloaded releases to
 * @param filterRelease the release filter function
 * @param filterAsset the asset filter function
 * @param unzip pass true if you want it the result to be unzipped as well.
 */
export default function downloadReleases(user: string, repo: string, outputDir: string, filterRelease?: typeof pass, filterAsset?: typeof pass, unzip?: boolean): Promise<string[]>;
export {};
